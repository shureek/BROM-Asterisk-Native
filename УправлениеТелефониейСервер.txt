Функция ПроверитьВозможностьРаботыСТелефонией() Экспорт
	Если ПараметрыСеанса.ТекущийПользователь.ИспользоватьТелефонию тогда
		Возврат Истина;
	Иначе
		Возврат ЛОжь;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьАдресВнешнейКомпоненты(Адрес) Экспорт
	Макет=ПолучитьОбщийМакет("InnovaIT_Asterisk_Native");
	Возврат ПоместитьВоВременноеХранилище(Макет,Адрес); 
КонецФункции

Функция ВернутьПараметрыПользователяТелефонии() Экспорт
	СтруктураПараметров = Новый Структура ("АдресСервера, ПортСервера, Логин, Пароль, ВнутреннийНомер, КлючПродукта",
											ПараметрыСеанса.ТекущийПользователь.АдресСервераТелефонии,
											ПараметрыСеанса.ТекущийПользователь.ПортСервераТелефонии,
											ПараметрыСеанса.ТекущийПользователь.ЛогинСервераТелефонии,
											ПараметрыСеанса.ТекущийПользователь.ПарольСервераТелефонии,
											ПараметрыСеанса.ТекущийПользователь.ВнутреннийНомерТелефонии, 
											ПараметрыСеанса.ТекущийПользователь.КлючПродукта);
											
    Возврат СтруктураПараметров;
КонецФункции

Процедура ЗаписатьСобытиеТелефонии(ИД, СвязанноеИД, ВходящийТранк, ВходящийНомер, СсылкаНаЗапись,ВнутреннийАбонент, ТипСобытия) Экспорт
	ЗаписьСобытия = РегистрыСведений.МониторСобытийТелефонии.СоздатьМенеджерЗаписи();
	ЗаписьСобытия.ИД = ИД;
	ЗаписьСобытия.СвязанноеИД = СвязанноеИД;
	ЗаписьСобытия.ВходящийТранк = ВходящийТранк;
	ЗаписьСобытия.ВходящийНомер = ВходящийНомер;
	ЗаписьСобытия.СсылкаНаЗапись = СсылкаНаЗапись;
	ЗаписьСобытия.ВнутреннийАбонент = ВнутреннийАбонент;
	ЗаписьСобытия.ДатаВремя = ТекущаяДатаСеанса();
	
	Если ТипСобытия = 0 тогда
		ЗаписьСобытия.ТипСобытия = Перечисления.ТипСобытияТелефонии.НовыйЗвонок;
	ИначеЕсли ТипСобытия = 1 тогда
		ЗаписьСобытия.ТипСобытия = Перечисления.ТипСобытияТелефонии.ПоднялиТрубку;
	ИначеЕсли ТипСобытия = 2 тогда
		ЗаписьСобытия.ТипСобытия = Перечисления.ТипСобытияТелефонии.ПоложилиТрубку;
	КонецЕсли;
	
	ЗаписьСобытия.Записать(Истина);
	
	
КонецПроцедуры

Функция ВернутьДанныеПоКлиенту(НомерТелефона) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ФизическиеЛицаКонтактнаяИнформация.Ссылка
	               |ПОМЕСТИТЬ ВтСсылка
	               |ИЗ
	               |	Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
	               |ГДЕ
	               |	ФизическиеЛицаКонтактнаяИнформация.НомерТелефона = &НомерТелефона
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ФизическиеЛицаКонтактнаяИнформация.Тип,
	               |	ФизическиеЛицаКонтактнаяИнформация.Вид,
	               |	ФизическиеЛицаКонтактнаяИнформация.Представление,
	               |	ФизическиеЛицаКонтактнаяИнформация.НомерТелефона,
	               |	ФизическиеЛицаКонтактнаяИнформация.Ссылка КАК ФИО
	               |ИЗ
	               |	Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтСсылка КАК ВтСсылка
	               |		ПО ФизическиеЛицаКонтактнаяИнформация.Ссылка = ВтСсылка.Ссылка";
	
	Запрос.УстановитьПараметр("НомерТелефона", "7" + НомерТелефона);
	
	Результат = Запрос.Выполнить();
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ФИО","");
	СтруктураПараметров.Вставить("НомерТелефона", "");
	СтруктураПараметров.Вставить("Адрес", "");
	СтруктураПараметров.Вставить("ДокументЗаказ", "");
	Если НЕ Результат.Пустой() тогда
		Выборка = Результат.Выбрать();
		//
		Пока Выборка.Следующий() Цикл
			СтруктураПараметров.Вставить("ФИО",Выборка.ФИО);
			Если Выборка.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон тогда
				СтруктураПараметров.Вставить("НомерТелефона", Прав(Выборка.НомерТелефона,10));
			ИначеЕсли Выборка.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес тогда
				СтруктураПараметров.Вставить("Адрес", Выборка.Представление);
			КонецЕсли;;	
		КонецЦикла;
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	ЗаказПокупателя.Ссылка
		               |ИЗ
		               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
		               |ГДЕ
		               |	ЗаказПокупателя.Дата МЕЖДУ &ДатаНачало И &ДатаКонец
		               |	И ЗаказПокупателя.СтатусЗаказа <> ЗНАЧЕНИЕ(Справочник.СтатусыЗаказов.Доставлен)
		               |	И ЗаказПокупателя.Клиент = &Клиент
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ЗаказПокупателя.Дата УБЫВ";
		
		Запрос.УстановитьПараметр("ДатаНачало", НачалоДня(ТекущаяДатаСеанса()));
		Запрос.УстановитьПараметр("ДатаКонец", КонецДня(ТекущаяДатаСеанса()));
		Запрос.УстановитьПараметр("Клиент", Выборка.ФИО);
		
		Результат = Запрос.Выполнить();
		
		Если НЕ Результат.Пустой() тогда
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			СтруктураПараметров.Вставить("ДокументЗаказ", Выборка.Ссылка);
		КонецЕсли;
			
	Иначе
		СпрФизЛица = Справочники.ФизическиеЛица.СоздатьЭлемент();
		СпрФизЛица.Наименование = "Новый клиент " + НомерТелефона;
		СтрокаТелефон = СпрФизЛица.КонтактнаяИнформация.Добавить();
		СтрокаТелефон.Вид = Справочники.ВидыКонтактнойИнформации.ТелефонФизическогоЛица;
		СтрокаТелефон.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;
		СтрокаТелефон.Представление = "+7 ("+Лев(НомерТелефона,3)+ ") "+Прав(НомерТелефона,7);
		СтрокаТелефон.НомерТелефона = "7" + НомерТелефона;
		СтрокаТелефон.НомерТелефонаБезКодов = Прав(НомерТелефона,7);
		Попытка
			СпрФизЛица.Записать();
		Исключение
		КонецПопытки;
		СтруктураПараметров.Вставить("ФИО", СпрФизЛица.Ссылка);
		СтруктураПараметров.Вставить("НомерТелефона", НомерТелефона);
		СтруктураПараметров.Вставить("Адрес", "");
		СтруктураПараметров.Вставить("ДокументЗаказ", Документы.ЗаказПокупателя.ПустаяСсылка());
	КонецЕсли;
	
	
	Возврат СтруктураПараметров;	
КонецФункции

Функция ВернутьДестизначныйНомер(НомерТелефона) Экспорт
	Если СтрДлина(НомерТелефона) >= 10 тогда
		Возврат Прав(НомерТелефона,10);
	Иначе
		КолВоНулей = 10 - СтрДлина(НомерТелефона);
		Возврат Лев("0000000000",КолВоНулей)+НомерТелефона;
	КонецЕсли;
КонецФункции
	
